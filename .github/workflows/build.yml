name: Build and Release Graphical Bootloader

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true

      - name: Get Upload URL
        id: get_upload_url
        run: |
          url=$(echo "${{ steps.create_release.outputs.upload_url }}" | sed -e 's/{.*//')
          echo "url=$url" >> $GITHUB_OUTPUT

  build-and-release:
    needs: create-release
    strategy:
      matrix:
        board:
          - { name: "ESP32-S3-BOX-3", sdkconfig: "sdkconfig.defaults.esp-box-3" }
          - { name: "ESP32-S3-BOX", sdkconfig: "sdkconfig.defaults.esp-box" }
          #- { name: "ESP32-P4", sdkconfig: "sdkconfig.defaults.esp32_p4_function_ev_board" }
          - { name: "M5Stack-CoreS3", sdkconfig: "sdkconfig.defaults.m5stack_core_s3" }
    runs-on: ubuntu-22.04
    container: espressif/idf:release-v5.3

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set SDKCONFIG_DEFAULTS
        run: echo "SDKCONFIG_DEFAULTS=${{ matrix.board.sdkconfig }}" >> $GITHUB_ENV

      - name: Build the main application and sub-applications
        run: |
          . /opt/esp/idf/export.sh
          cmake -Daction=select_board -P Bootloader.cmake
          cmake -Daction=build_all_apps -P Bootloader.cmake

      - name: Merge binaries into a single image
        run: |
          . /opt/esp/idf/export.sh
          cmake -Daction=merge_binaries -P Bootloader.cmake

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: graphical_bootloader_${{ matrix.board.name }}
          path: build/combined.bin

  upload-release-assets:
    needs: build-and-release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./artifacts/*
          asset_name: graphical_bootloader_${{ matrix.board.name }}.bin
          asset_content_type: application/octet-stream
